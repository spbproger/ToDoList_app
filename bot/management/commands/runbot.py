
from django.conf import settings
from django.core.management.base import BaseCommand

from bot.models import TgUser
from bot.tg.client import TgClient
from bot.tg.dc import Message
from goals.models import Goal, GoalCategory


class Command(BaseCommand):
    help = "Run Telegram bot"
    offset = 0

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.tg_client = TgClient(settings.BOT_TOKEN)

    def handle(self, *args, **kwargs):
        while True:
            response = self.tg_client.get_updates(offset=self.offset)

            for item in response.result:
                self.offset = item.update_id + 1
                if hasattr(item, "message"):
                    self.handle_message(item.message)
                    continue

    def handle_message(self, msg: Message):
        tg_user, created = TgUser.objects.get_or_create(
            tg_user_id=msg.from_.id,
            tg_chat_id=msg.chat.id,
        )

        if created:
            tg_user.generate_verification_code()
            self.tg_client.send_message(
                chat_id=msg.chat.id,
                text=f"–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
                     f"–≤–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π –∫–æ–¥:\n\n"
                     f"{tg_user.verification_code}\n\n"
                     f"–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –∞–¥—Ä–µ—Å–æ–º spbproger.tk"
            )

        elif not tg_user.user:
            tg_user.generate_verification_code()
            self.tg_client.send_message(
                tg_user.tg_chat_id,
                f'–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç. '
                f'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π –∫–æ–¥: '
                f'{tg_user.verification_code}'
            )

        if msg.text == "/goals":
            self.get_goals(msg, tg_user)

        elif msg.text == "/create":
            self.offset += 1
            self.choose_category(msg, tg_user)

        else:
            self.tg_client.send_message(
                chat_id=msg.chat.id,
                text=f"–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É ( ** {msg.text} ** )!"
            )

    def choose_category(self, msg: Message, tg_user: TgUser):
        goal_categories = GoalCategory.objects.filter(
            board__participants__user=tg_user.user,
            is_deleted=False,
        )
        goal_categories_srt = "\n".join(["üîπ " + goal.title for goal in goal_categories])

        self.tg_client.send_message(
            chat_id=msg.chat.id,
            text=f"üè∑ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:\n"
                 f"=====================\n"
                 f"{goal_categories_srt}\n"
                 f"=====================\n"
        )

        # –æ–∂–∏–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        is_running = True

        while is_running:
            res = self.tg_client.get_updates(offset=self.offset)

            for item in res.result:
                self.offset = item.update_id + 1
                if hasattr(item, "message"):
                    category = goal_categories.filter(title=msg.text)
                    if category:
                        self.create_goal(msg, tg_user, category)
                        is_running = False
                    elif msg.text == "/cancel":
                        self.tg_client.send_message(
                            chat_id=msg.chat.id,
                            text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."
                        )
                        is_running = False
                    else:
                        self.tg_client.send_message(
                            chat_id=msg.chat.id,
                            text=f"–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{msg.text}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
                        )
                        is_running = False

    def create_goal(self, msg: Message, tg_user: TgUser, category: GoalCategory):

        self.tg_client.send_message(
            chat_id=msg.chat.id,
            text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ü–µ–ª–∏!"
        )

        # –æ–∂–∏–¥–∞–Ω–∏—è —Ü–µ–ª–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        is_running = True

        while is_running:
            res = self.tg_client.get_updates(offset=self.offset)

            for item in res.result:
                self.offset = item.update_id + 1
                if item.message.text == "/cancel":
                    self.tg_client.send_message(
                        chat_id=msg.chat.id,
                        text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."
                    )
                    is_running = False
                else:
                    goal = Goal.objects.create(
                        title=item.message.text,
                        category=category,
                        user=tg_user.user,
                    )
                    self.tg_client.send_message(
                        chat_id=msg.chat.id,
                        text=f"–¶–µ–ª—å '{goal.title}' –¥–æ–±–∞–≤–ª–µ–Ω–∞."
                    )
                    is_running = False

    def get_goals(self, msg: Message, tg_user: TgUser):
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ü–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram.
        –ï—Å–ª–∏ —Ü–µ–ª–µ–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ —Ü–µ–ª–µ–π –Ω–µ—Ç.
        """
        goals = Goal.objects.filter(category__board__participants__user=tg_user.user).exclude(
            status=Goal.Status.archived)

        if not goals:
            self.tg_client.send_message(
                chat_id=msg.chat.id,
                text=f"–ù–∞ —Å–µ–≥–æ–¥–Ω—è —É –í–∞—Å —Ü–µ–ª–µ–π –Ω–µ—Ç")
            return None

        goals_str = "\n".join(["üîπ " + goal.title for goal in goals])

        self.tg_client.send_message(
            chat_id=msg.chat.id,
            text=f"–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π:\n"
                 f"===================\n"
                 f"{goals_str}:\n"
                 f"===================\n"
        )


