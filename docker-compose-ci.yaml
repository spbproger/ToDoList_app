version: '3.9'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"

  api:
    image: standocker29/diploma_stn_docker:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
#    env_file:
#      - .env
    environment:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      POSTGRES_HOST: 'db'
      DEBUG: True
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"


  migrations:
    image: standocker29/diploma_stn_docker:$GITHUB_REF_NAME-$GITHUB_RUN_ID
#    env_file:
#      - .env
    environment:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      POSTGRES_HOST: 'db'
      DEBUG: True
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations"
      sh -c "python manage.py migrate"

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      POSTGRES_HOST: 'db'
      DEBUG: True
    restart: always

    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data:

