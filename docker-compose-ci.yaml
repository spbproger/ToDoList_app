version: '3.9'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"

  api:
    image: standocker29/diploma_stn_docker:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: 'db'
      DB_PORT: ${DB_PORT}
      DEBUG: False
      LANGUAGE_CODE: 'ru-ru'
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
  migrations:
    image: standocker29/diploma_stn_docker:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: 'db'
      DB_PORT: ${DB_PORT}
      DEBUG: False
      LANGUAGE_CODE: 'ru-ru'
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate

  db:
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data:
